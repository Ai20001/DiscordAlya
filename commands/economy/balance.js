const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('balance')
        .setDescription('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å –∏–ª–∏ –±–∞–ª–∞–Ω—Å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –±–∞–ª–∞–Ω—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å')
                .setRequired(false)),

    async execute(interaction, client) {
        const targetUser = interaction.options.getUser('user') || interaction.user;
        const member = await interaction.guild.members.fetch(targetUser.id);

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const userData = await client.db.get('SELECT * FROM economy WHERE user_id = ? AND guild_id = ?', 
            [targetUser.id, interaction.guild.id]);

        if (!userData) {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
            await client.db.run(
                'INSERT INTO economy (user_id, guild_id, balance, bank) VALUES (?, ?, ?, ?)',
                [targetUser.id, interaction.guild.id, 0, 0]
            );
            return interaction.reply({
                content: '‚ùå –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ—Ç –¥–µ–Ω–µ–≥!',
                ephemeral: true
            });
        }

        // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
        const embed = new EmbedBuilder()
            .setColor('#00ff00')
            .setTitle(`üí∞ –ë–∞–ª–∞–Ω—Å ${member.displayName}`)
            .setDescription(`**–ù–∞–ª–∏—á–Ω—ã–µ:** ${userData.balance} –º–æ–Ω–µ—Ç\n**–í –±–∞–Ω–∫–µ:** ${userData.bank} –º–æ–Ω–µ—Ç\n**–í—Å–µ–≥–æ:** ${userData.balance + userData.bank} –º–æ–Ω–µ—Ç`)
            .setThumbnail(member.user.displayAvatarURL({ dynamic: true }))
            .setTimestamp();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await interaction.reply({
            embeds: [embed]
        });
    }
}; 