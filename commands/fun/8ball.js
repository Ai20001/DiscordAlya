const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('8ball')
        .setDescription('–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –º–∞–≥–∏—á–µ—Å–∫–æ–º—É —à–∞—Ä—É')
        .addStringOption(option =>
            option.setName('question')
                .setDescription('–í–∞—à –≤–æ–ø—Ä–æ—Å')
                .setRequired(true)),

    async execute(interaction, client) {
        const question = interaction.options.getString('question');
        
        // –ú–∞—Å—Å–∏–≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        const answers = [
            '–ë–µ—Å—Å–ø–æ—Ä–Ω–æ!',
            '–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞!',
            '–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ.',
            '–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã.',
            '–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –¥–∞!',
            '–î–∞.',
            '–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å.',
            '–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ.',
            '–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å.',
            '–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å.',
            '–ú–µ–¥–ª–µ–Ω–Ω–µ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.',
            '–°–ø—Ä–æ—Å–∏ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.',
            '–ù–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –Ω–∞ —ç—Ç–æ.',
            '–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç.',
            '–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º - –Ω–µ—Ç.',
            '–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ.',
            '–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ.'
        ];

        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç
        const answer = answers[Math.floor(Math.random() * answers.length)];

        // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥
        const embed = new EmbedBuilder()
            .setColor('#000000')
            .setTitle('üé± –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä')
            .setDescription(`**–í–æ–ø—Ä–æ—Å:** ${question}\n\n**–û—Ç–≤–µ—Ç:** ${answer}`)
            .setThumbnail('https://i.imgur.com/8tBXT9I.png')
            .setTimestamp();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await interaction.reply({
            embeds: [embed]
        });
    }
}; 